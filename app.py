import streamlit as st
import pickle
import numpy as np

# ------------------------
# ØªØ­Ù…ÙŠÙ„ Ø§Ù„Ù…ÙˆØ¯ÙŠÙ„ Ùˆ LabelEncoder
# ------------------------
with open("model.pkl", "rb") as f:
    model, le = pickle.load(f)   # Ù„Ø§Ø²Ù… ÙŠÙƒÙˆÙ† Ù…ØªØ®Ø²Ù† Ø§Ù„Ø§ØªÙ†ÙŠÙ† (model + le)

st.title("ðŸ’„ Makeup Rating Predictor")

# ------------------------
# ØªØ­Ø¯ÙŠØ¯ Ø£Ø´Ù‡Ø± 5 Ø¨Ø±Ø§Ù†Ø¯Ø²
# ------------------------
top_brands = ["Maybelline", "L'Oreal", "MAC", "Sephora", "Clinique"]

# ------------------------
# Ø¥Ø¯Ø®Ø§Ù„ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª Ù…Ù† Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…
# ------------------------
price = st.number_input("Price:", min_value=1.0, step=1.0)

# Ø¨Ø¯Ù„ Ø§Ù„Ù€ slider Ø®Ù„ÙŠÙ‡Ø§ number_input Ø¹Ø§Ø¯ÙŠ
rating = st.number_input("Your rate:", min_value=1.0, max_value=5.0, step=0.1)

brand_name = st.selectbox("Brand:", top_brands)

# ------------------------
# ØªØ­ÙˆÙŠÙ„ Ø§Ù„Ø¨Ø±Ø§Ù†Ø¯ Ù„Ø±Ù‚Ù… Ø¨Ø§Ù„Ù€ LabelEncoder
# ------------------------
if brand_name in le.classes_:
    brand_encoded = le.transform([brand_name])[0]
else:
    st.error("Brand not exist")
    brand_encoded = None

# ------------------------
# Ø§Ù„ØªÙˆÙ‚Ø¹
# ------------------------
if st.button("Predict") and brand_encoded is not None:
    features = np.array([[price, brand_encoded, rating]])
    prediction = model.predict(features)

    # Ù‚Øµ Ø§Ù„ØªÙˆÙ‚Ø¹ Ø¨ÙŠÙ† 1 Ùˆ 5
    prediction = max(1.0, min(5.0, prediction[0]))

    st.success(f": {prediction:.2f}")
